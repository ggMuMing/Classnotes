1、布尔操作符
- 操作布尔值：布尔值直接参与运算
  操作的值不是布尔值：先使用Boolean()函数将其他类型的语句转换为布尔值后，再参与运算
（1）逻辑非
（2）逻辑与
（3）逻辑或

2、乘性操作符
	*乘法     /除法     %求余
规则：
	- 如果两个操作符都为number类型，那么直接参与运算；
	- 如果两个操作符数有一个不为number类型，那么就会使用Number函数进行类型转换后参与运算；
	- 如果乘积超过了ECMAScript数值的表示范围，则返回Infinity 或 - Infinity；
	- 如果有一个操作数是NaN，则结果是NaN；
	
	-取余的特殊点：
		如果两个操作数为number类型，直接参与运算
		如果有一个操作数为字符串时，将另一个操作数使用String（）函数转换为字符串，然后进行字符串的拼接。
		
3、加性操作符
	加：
		1、如果两个操作数为number类型，直接参与运算
		2、如果有一个操作数为字符串时，将另一个操作数使用String（）函数转换为字符串，然后进行字符串的拼接
		1 + 2 + “3”  =》“33”     “1” + 2 + 3 =>"123"
	减：
		1、如果有一个操作数不为number类型，会使用Number（）函数进行转换后参与运算
		2、如果有一个操作数为对象，先获取对象的字符串表现形式，再将字符串转换为number类型参与运算

4、关系运算符：>  <  =
	- 如果两个操作数都是数值，则执行值比较
	- 如果两个操作数都是字符串，则比较两个字符串对应的字符编码值
	- 如果一个操作数是数值，则将另一个操作数转换为一个数值，然后尽心数值比较
	- 如果一个操作数是对象，则调用这个对象的valueOf（）方法，用得到的结果按照
		前面的规则执行比较。如果对象没有valueOf方法，则调用toString方法，并用得到的结果根据前面
		的规则执行
	- 如果一个操作数是布尔值，则将其转换为数值1或者0，然后再执行比较
	- 根据规则，任何操作数与NaN进行关系比较，结果都是false。
	- 比较字符串时会一个一个字符进行比较，比较字符编码的大小
	
5、相等操作符
	相等和不想等：
		1、如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值-false转换为0，true转换为1；
		2、如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值；
		3、如果一个操作数是对象，另一个不是，则调用对象的valueOf函数或者toString函数返回值，再转换为number类型后按照前面的规则进行比较；
		4、null和undefined是相等的
		5、如果有一个操作数是NaN，则相等操作符返回false，而不想等操作符返回true。
		6、如果两个对象之间比较，则比较两个对象是否相等，即比较两个对象是否为同一对象，如果对象相同则为true，不同则为false
	全等和不全等===
		1、如果比较的操作数类型不一致直接输出false
6、条件操作符
	三目运算：
	variable = boolean_expression ? true_value : false_value;计算表达式，判断返回布尔值，若为true执行前一段，若为false则执行后一段
7、赋值操作符
	*= /= += -= <<=
8、逗号操作符
返回最后一个表达式的值。
var a = 10;
		var b = 20;
		
		var c ;
		
		c = (a++,++b,a+b);  
        console.log(c);     //32
		
		var d = 10;
		console.log(d++);   //10

9、流程控制语句